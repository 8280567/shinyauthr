% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/login.R
\name{login}
\alias{login}
\title{login server module}
\usage{
login(input, output, session, data, user_col, pwd_col, hashed = FALSE,
  algo = NULL, log_out = NULL)
}
\arguments{
\item{input}{shiny input}

\item{output}{shiny output}

\item{session}{shiny session}

\item{data}{data frame or tibble containing usernames, passwords and other user data}

\item{user_col}{bare (unquoted) column name containing usernames}

\item{pwd_col}{bare (unquoted) column name containing passwords}

\item{hashed}{have the passwords been hash encrypted using the digest package? defaults to FALSE}

\item{algo}{if passwords are hashed, what hashing algorithm was used? options are c("md5", "sha1", "crc32", "sha256", "sha512", "xxhash32", "xxhash64", "murmur32")}

\item{log_out}{[reactive] supply the returned reactive from \link{logout} here to trigger a user logout}
}
\value{
The module will return a reactive 2 element list to your main application. 
  First element \code{user_auth} is a boolean inditcating whether there has been
  a successful login or not. Second element \code{info} will be the data frame provided
  to the function, filtered to the row matching the succesfully logged in username. 
  When \code{user_auth} is FALSE \code{info} is NULL.
}
\description{
Shiny authentication module for use with \link{loginUI}
}
\details{
Call via \code{shiny::callModule(login, "your_id", ...)}
}
\examples{
\dontrun{
  user_credentials <- shiny::callModule(login, "login", 
                                        data = user_base,
                                        user_col = user,
                                        pwd_col = password,
                                        log_out = reactive(logout_init()))
}

}
\author{
Paul Campbell, \email{pacampbell91@gmail.com}
}
